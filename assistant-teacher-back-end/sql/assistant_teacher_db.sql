-- Eğer tablolar zaten varsa, yeniden oluşturulabilmesi için onları kaldırıyoruz.
DROP TABLE IF EXISTS "paragraph" CASCADE;
DROP TABLE IF EXISTS "student" CASCADE;
DROP TABLE IF EXISTS "class" CASCADE;
DROP TABLE IF EXISTS "teacher" CASCADE;

-- Tablo Oluşturma

-- 1. Öğretmen Tablosu (Teacher)
CREATE TABLE "teacher" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "name" VARCHAR(255) NOT NULL,        -- first_name -> name
  "surname" VARCHAR(255) NOT NULL,     -- last_name -> surname
  "email" VARCHAR(255) UNIQUE NOT NULL,
  "password" VARCHAR(255) NOT NULL,
  "created_at" TIMESTAMP DEFAULT NOW(),
  "updated_at" TIMESTAMP DEFAULT NOW()
);

-- 2. Sınıf Tablosu (Class)
CREATE TABLE "class" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "teacher_id" INTEGER NOT NULL,
  "name" VARCHAR(255) NOT NULL,
  "created_at" TIMESTAMP DEFAULT NOW(),
  "updated_at" TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY ("teacher_id") REFERENCES "teacher" ("id")
);

-- 3. Öğrenci Tablosu (Student)
CREATE TABLE "student" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "name" VARCHAR(255) NOT NULL,        -- first_name -> name
  "surname" VARCHAR(255) NOT NULL,     -- last_name -> surname
  "age" INTEGER NOT NULL,               -- date_of_birth -> age
  "class_id" INTEGER NOT NULL,
  "created_at" TIMESTAMP DEFAULT NOW(),
  "updated_at" TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY ("class_id") REFERENCES "class" ("id")
);

-- 4. Paragraf Tablosu (Paragraph)
CREATE TABLE "paragraph" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "teacher_id" INTEGER NOT NULL,
  "content" TEXT,
  "question" TEXT,
  "created_at" TIMESTAMP DEFAULT NOW(),
  "updated_at" TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY ("teacher_id") REFERENCES "teacher" ("id")
);

-- Örnek Veri Ekleme

-- 1. Öğretmen Ekleme
INSERT INTO "teacher" (name, surname, email, password, created_at, updated_at)
VALUES ('admin', 'Admin', 'admin@example.com', 'abc', NOW(), NOW());

-- 2. Sınıf Ekleme
-- Burada, "admin" öğretmeninin "id" değerinin 1 olduğu varsayılmıştır. Eğer farklı bir "id" değeri kullanılıyorsa, "teacher_id" değerini buna göre ayarlayın.
INSERT INTO "class" (teacher_id, name, created_at, updated_at)
VALUES (1, '2A', NOW(), NOW());

-- 3. 5 Öğrenci Ekleme
INSERT INTO "student" (
  name,           -- first_name -> name
  surname,        -- last_name -> surname
  age,            -- date_of_birth -> age
  class_id,
  created_at,
  updated_at
) VALUES
  ('Ahmet', 'Demir', 8, 1, NOW(), NOW()),
  ('Ayşe', 'Yıldız', 8, 1, NOW(), NOW()),
  ('Mehmet', 'Kara', 8, 1, NOW(), NOW()),
  ('Elif', 'Çelik', 8, 1, NOW(), NOW()),
  ('Can', 'Şahin', 8, 1, NOW(), NOW());

-- 4. Paragraf Ekleme (Opsiyonel)
-- İsteğe bağlı olarak, "admin" öğretmenine ait bir paragraf eklemek için aşağıdaki INSERT ifadesini kullanabilirsiniz.
INSERT INTO "paragraph" (teacher_id, content, question, created_at, updated_at)
VALUES (1, 'Bu bir örnek paragraftır.', 'Paragrafın ana fikri nedir?', NOW(), NOW());
